# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\QtUI\weapon_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.9.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtWidgets

class Ui_WeaponDialog(object):
    def setupUi(self, WeaponDialog):
        WeaponDialog.setObjectName("WeaponDialog")
        WeaponDialog.resize(1051, 569)
        self.vl_wd_main = QtWidgets.QVBoxLayout(WeaponDialog)
        self.vl_wd_main.setObjectName("vl_wd_main")
        self.cb_wd_category = QtWidgets.QComboBox(WeaponDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cb_wd_category.sizePolicy().hasHeightForWidth())
        self.cb_wd_category.setSizePolicy(sizePolicy)
        self.cb_wd_category.setObjectName("cb_wd_category")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.cb_wd_category.addItem("")
        self.vl_wd_main.addWidget(self.cb_wd_category)
        self.tw_wd_gear = QtWidgets.QTreeWidget(WeaponDialog)
        self.tw_wd_gear.setAnimated(False)
        self.tw_wd_gear.setHeaderHidden(False)
        self.tw_wd_gear.setObjectName("tw_wd_gear")
        self.vl_wd_main.addWidget(self.tw_wd_gear)
        self.gl_wd_quality = QtWidgets.QGridLayout()
        self.gl_wd_quality.setObjectName("gl_wd_quality")
        self.l_wd_cost = QtWidgets.QLabel(WeaponDialog)
        self.l_wd_cost.setObjectName("l_wd_cost")
        self.gl_wd_quality.addWidget(self.l_wd_cost, 0, 1, 1, 1)
        self.l_wd_dice_pool = QtWidgets.QLabel(WeaponDialog)
        self.l_wd_dice_pool.setObjectName("l_wd_dice_pool")
        self.gl_wd_quality.addWidget(self.l_wd_dice_pool, 0, 2, 1, 1)
        self.l_wd_quality = QtWidgets.QLabel(WeaponDialog)
        self.l_wd_quality.setObjectName("l_wd_quality")
        self.gl_wd_quality.addWidget(self.l_wd_quality, 0, 0, 1, 1)
        self.l_wd_min_skill = QtWidgets.QLabel(WeaponDialog)
        self.l_wd_min_skill.setObjectName("l_wd_min_skill")
        self.gl_wd_quality.addWidget(self.l_wd_min_skill, 0, 4, 1, 1)
        self.l_wd_rarity = QtWidgets.QLabel(WeaponDialog)
        self.l_wd_rarity.setObjectName("l_wd_rarity")
        self.gl_wd_quality.addWidget(self.l_wd_rarity, 0, 3, 1, 1)
        self.l_wd_cost_val = QtWidgets.QLabel(WeaponDialog)
        self.l_wd_cost_val.setObjectName("l_wd_cost_val")
        self.gl_wd_quality.addWidget(self.l_wd_cost_val, 1, 1, 1, 1)
        self.cb_wd_quality_val = QtWidgets.QComboBox(WeaponDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cb_wd_quality_val.sizePolicy().hasHeightForWidth())
        self.cb_wd_quality_val.setSizePolicy(sizePolicy)
        self.cb_wd_quality_val.setMinimumSize(QtCore.QSize(150, 0))
        self.cb_wd_quality_val.setObjectName("cb_wd_quality_val")
        self.cb_wd_quality_val.addItem("")
        self.cb_wd_quality_val.addItem("")
        self.cb_wd_quality_val.addItem("")
        self.cb_wd_quality_val.addItem("")
        self.cb_wd_quality_val.addItem("")
        self.cb_wd_quality_val.addItem("")
        self.gl_wd_quality.addWidget(self.cb_wd_quality_val, 1, 0, 1, 1)
        self.l_wd_upgrades = QtWidgets.QLabel(WeaponDialog)
        self.l_wd_upgrades.setObjectName("l_wd_upgrades")
        self.gl_wd_quality.addWidget(self.l_wd_upgrades, 0, 5, 1, 1)
        self.l_wd_dice_pool_val = QtWidgets.QLabel(WeaponDialog)
        self.l_wd_dice_pool_val.setObjectName("l_wd_dice_pool_val")
        self.gl_wd_quality.addWidget(self.l_wd_dice_pool_val, 1, 2, 1, 1)
        self.l_wd_rarity_val = QtWidgets.QLabel(WeaponDialog)
        self.l_wd_rarity_val.setObjectName("l_wd_rarity_val")
        self.gl_wd_quality.addWidget(self.l_wd_rarity_val, 1, 3, 1, 1)
        self.l_wd_min_skill_val = QtWidgets.QLabel(WeaponDialog)
        self.l_wd_min_skill_val.setObjectName("l_wd_min_skill_val")
        self.gl_wd_quality.addWidget(self.l_wd_min_skill_val, 1, 4, 1, 1)
        self.l_wd_upgrades_val = QtWidgets.QLabel(WeaponDialog)
        self.l_wd_upgrades_val.setObjectName("l_wd_upgrades_val")
        self.gl_wd_quality.addWidget(self.l_wd_upgrades_val, 1, 5, 1, 1)
        self.vl_wd_main.addLayout(self.gl_wd_quality)
        self.gl_wd_quantity = QtWidgets.QGridLayout()
        self.gl_wd_quantity.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gl_wd_quantity.setObjectName("gl_wd_quantity")
        self.l_wd_quantity = QtWidgets.QLabel(WeaponDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.l_wd_quantity.sizePolicy().hasHeightForWidth())
        self.l_wd_quantity.setSizePolicy(sizePolicy)
        self.l_wd_quantity.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.l_wd_quantity.setObjectName("l_wd_quantity")
        self.gl_wd_quantity.addWidget(self.l_wd_quantity, 0, 0, 1, 1)
        self.sb_wd_quantity_val = QtWidgets.QSpinBox(WeaponDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sb_wd_quantity_val.sizePolicy().hasHeightForWidth())
        self.sb_wd_quantity_val.setSizePolicy(sizePolicy)
        self.sb_wd_quantity_val.setMinimum(1)
        self.sb_wd_quantity_val.setObjectName("sb_wd_quantity_val")
        self.gl_wd_quantity.addWidget(self.sb_wd_quantity_val, 1, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gl_wd_quantity.addItem(spacerItem, 0, 1, 1, 1)
        self.vl_wd_main.addLayout(self.gl_wd_quantity)
        self.buttonBox = QtWidgets.QDialogButtonBox(WeaponDialog)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.vl_wd_main.addWidget(self.buttonBox)

        self.retranslateUi(WeaponDialog)
        self.buttonBox.accepted.connect(WeaponDialog.accept)
        self.buttonBox.rejected.connect(WeaponDialog.reject)
        QtCore.QMetaObject.connectSlotsByName(WeaponDialog)

    def retranslateUi(self, WeaponDialog):
        _translate = QtCore.QCoreApplication.translate
        WeaponDialog.setWindowTitle(_translate("WeaponDialog", "Weapons - WOIN Character Assistant"))
        self.cb_wd_category.setItemText(0, _translate("WeaponDialog", "Archaic Axes"))
        self.cb_wd_category.setItemText(1, _translate("WeaponDialog", "Archaic Gunpowder"))
        self.cb_wd_category.setItemText(2, _translate("WeaponDialog", "Archaic Miscellaneous"))
        self.cb_wd_category.setItemText(3, _translate("WeaponDialog", "Archaic Polearms"))
        self.cb_wd_category.setItemText(4, _translate("WeaponDialog", "Archaic Ranged"))
        self.cb_wd_category.setItemText(5, _translate("WeaponDialog", "Archaic Swords"))
        self.cb_wd_category.setItemText(6, _translate("WeaponDialog", "Eastern Melee"))
        self.cb_wd_category.setItemText(7, _translate("WeaponDialog", "Future Explosive Ordnance"))
        self.cb_wd_category.setItemText(8, _translate("WeaponDialog", "Future Exotic Ranged"))
        self.cb_wd_category.setItemText(9, _translate("WeaponDialog", "Future Exotic Melee"))
        self.cb_wd_category.setItemText(10, _translate("WeaponDialog", "Future Ranged"))
        self.cb_wd_category.setItemText(11, _translate("WeaponDialog", "Future Melee"))
        self.cb_wd_category.setItemText(12, _translate("WeaponDialog", "Laser Swords"))
        self.cb_wd_category.setItemText(13, _translate("WeaponDialog", "Modern Firearms"))
        self.cb_wd_category.setItemText(14, _translate("WeaponDialog", "Western Handguns"))
        self.cb_wd_category.setItemText(15, _translate("WeaponDialog", "Western Longarms"))
        self.cb_wd_category.setItemText(16, _translate("WeaponDialog", "World War 2 Firearms"))
        self.tw_wd_gear.setSortingEnabled(True)
        self.tw_wd_gear.headerItem().setText(0, _translate("WeaponDialog", "Name"))
        self.tw_wd_gear.headerItem().setText(1, _translate("WeaponDialog", "Damage"))
        self.tw_wd_gear.headerItem().setText(2, _translate("WeaponDialog", "Type"))
        self.tw_wd_gear.headerItem().setText(3, _translate("WeaponDialog", "Range"))
        self.tw_wd_gear.headerItem().setText(4, _translate("WeaponDialog", "Cost"))
        self.tw_wd_gear.headerItem().setText(5, _translate("WeaponDialog", "Size"))
        self.tw_wd_gear.headerItem().setText(6, _translate("WeaponDialog", "Weight"))
        self.tw_wd_gear.headerItem().setText(7, _translate("WeaponDialog", "Availability"))
        self.tw_wd_gear.headerItem().setText(8, _translate("WeaponDialog", "Special"))
        self.l_wd_cost.setText(_translate("WeaponDialog", "Cost"))
        self.l_wd_dice_pool.setText(_translate("WeaponDialog", "Dice Pool"))
        self.l_wd_quality.setText(_translate("WeaponDialog", "Quality"))
        self.l_wd_min_skill.setText(_translate("WeaponDialog", "Min Skill"))
        self.l_wd_rarity.setText(_translate("WeaponDialog", "Rarity"))
        self.l_wd_cost_val.setText(_translate("WeaponDialog", "cost_val"))
        self.cb_wd_quality_val.setItemText(0, _translate("WeaponDialog", "Standard"))
        self.cb_wd_quality_val.setItemText(1, _translate("WeaponDialog", "High"))
        self.cb_wd_quality_val.setItemText(2, _translate("WeaponDialog", "Exceptional"))
        self.cb_wd_quality_val.setItemText(3, _translate("WeaponDialog", "Mastercraft"))
        self.cb_wd_quality_val.setItemText(4, _translate("WeaponDialog", "Artisanal"))
        self.cb_wd_quality_val.setItemText(5, _translate("WeaponDialog", "Legendary"))
        self.l_wd_upgrades.setText(_translate("WeaponDialog", "Upgrades"))
        self.l_wd_dice_pool_val.setText(_translate("WeaponDialog", "dice_pool_val"))
        self.l_wd_rarity_val.setText(_translate("WeaponDialog", "rarity_val"))
        self.l_wd_min_skill_val.setText(_translate("WeaponDialog", "min_skill_val"))
        self.l_wd_upgrades_val.setText(_translate("WeaponDialog", "upgrades_val"))
        self.l_wd_quantity.setText(_translate("WeaponDialog", "Quantity"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    WeaponDialog = QtWidgets.QDialog()
    ui = Ui_WeaponDialog()
    ui.setupUi(WeaponDialog)
    WeaponDialog.show()
    sys.exit(app.exec_())

