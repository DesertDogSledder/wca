# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\QtUI\armor_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.9.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtWidgets

class Ui_ArmorDialog(object):
    def setupUi(self, ArmorDialog):
        ArmorDialog.setObjectName("ArmorDialog")
        ArmorDialog.resize(1051, 569)
        self.vl_ar_main = QtWidgets.QVBoxLayout(ArmorDialog)
        self.vl_ar_main.setObjectName("vl_ar_main")
        self.cb_ar_category = QtWidgets.QComboBox(ArmorDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cb_ar_category.sizePolicy().hasHeightForWidth())
        self.cb_ar_category.setSizePolicy(sizePolicy)
        self.cb_ar_category.setObjectName("cb_ar_category")
        self.cb_ar_category.addItem("")
        self.cb_ar_category.addItem("")
        self.cb_ar_category.addItem("")
        self.cb_ar_category.addItem("")
        self.cb_ar_category.addItem("")
        self.vl_ar_main.addWidget(self.cb_ar_category)
        self.tw_ar_gear = QtWidgets.QTreeWidget(ArmorDialog)
        self.tw_ar_gear.setAnimated(False)
        self.tw_ar_gear.setHeaderHidden(False)
        self.tw_ar_gear.setObjectName("tw_ar_gear")
        self.vl_ar_main.addWidget(self.tw_ar_gear)
        self.gl_ar_quality = QtWidgets.QGridLayout()
        self.gl_ar_quality.setObjectName("gl_ar_quality")
        self.l_ar_min_skill = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_min_skill.setObjectName("l_ar_min_skill")
        self.gl_ar_quality.addWidget(self.l_ar_min_skill, 0, 4, 1, 1)
        self.l_ar_rarity = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_rarity.setObjectName("l_ar_rarity")
        self.gl_ar_quality.addWidget(self.l_ar_rarity, 0, 3, 1, 1)
        self.cb_ar_quality_val = QtWidgets.QComboBox(ArmorDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cb_ar_quality_val.sizePolicy().hasHeightForWidth())
        self.cb_ar_quality_val.setSizePolicy(sizePolicy)
        self.cb_ar_quality_val.setMinimumSize(QtCore.QSize(150, 0))
        self.cb_ar_quality_val.setObjectName("cb_ar_quality_val")
        self.cb_ar_quality_val.addItem("")
        self.cb_ar_quality_val.addItem("")
        self.cb_ar_quality_val.addItem("")
        self.cb_ar_quality_val.addItem("")
        self.cb_ar_quality_val.addItem("")
        self.cb_ar_quality_val.addItem("")
        self.gl_ar_quality.addWidget(self.cb_ar_quality_val, 1, 0, 1, 1)
        self.l_ar_cost = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_cost.setObjectName("l_ar_cost")
        self.gl_ar_quality.addWidget(self.l_ar_cost, 0, 1, 1, 1)
        self.l_ar_dice_pool = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_dice_pool.setObjectName("l_ar_dice_pool")
        self.gl_ar_quality.addWidget(self.l_ar_dice_pool, 0, 2, 1, 1)
        self.l_ar_quality = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_quality.setObjectName("l_ar_quality")
        self.gl_ar_quality.addWidget(self.l_ar_quality, 0, 0, 1, 1)
        self.l_ar_cost_val = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_cost_val.setObjectName("l_ar_cost_val")
        self.gl_ar_quality.addWidget(self.l_ar_cost_val, 1, 1, 1, 1)
        self.l_ar_upgrades = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_upgrades.setObjectName("l_ar_upgrades")
        self.gl_ar_quality.addWidget(self.l_ar_upgrades, 0, 5, 1, 1)
        self.l_ar_rarity_val = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_rarity_val.setObjectName("l_ar_rarity_val")
        self.gl_ar_quality.addWidget(self.l_ar_rarity_val, 1, 3, 1, 1)
        self.l_ar_dice_pool_val = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_dice_pool_val.setObjectName("l_ar_dice_pool_val")
        self.gl_ar_quality.addWidget(self.l_ar_dice_pool_val, 1, 2, 1, 1)
        self.l_ar_min_skill_val = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_min_skill_val.setObjectName("l_ar_min_skill_val")
        self.gl_ar_quality.addWidget(self.l_ar_min_skill_val, 1, 4, 1, 1)
        self.l_ar_upgrades_val = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_upgrades_val.setObjectName("l_ar_upgrades_val")
        self.gl_ar_quality.addWidget(self.l_ar_upgrades_val, 1, 5, 1, 1)
        self.l_ar_soak = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_soak.setObjectName("l_ar_soak")
        self.gl_ar_quality.addWidget(self.l_ar_soak, 0, 6, 1, 1)
        self.l_ar_soak_val = QtWidgets.QLabel(ArmorDialog)
        self.l_ar_soak_val.setObjectName("l_ar_soak_val")
        self.gl_ar_quality.addWidget(self.l_ar_soak_val, 1, 6, 1, 1)
        self.vl_ar_main.addLayout(self.gl_ar_quality)
        self.gl_ar_quantity = QtWidgets.QGridLayout()
        self.gl_ar_quantity.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gl_ar_quantity.setObjectName("gl_ar_quantity")
        self.l_ar_quantity = QtWidgets.QLabel(ArmorDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.l_ar_quantity.sizePolicy().hasHeightForWidth())
        self.l_ar_quantity.setSizePolicy(sizePolicy)
        self.l_ar_quantity.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.l_ar_quantity.setObjectName("l_ar_quantity")
        self.gl_ar_quantity.addWidget(self.l_ar_quantity, 0, 0, 1, 1)
        self.sb_ar_quantity_val = QtWidgets.QSpinBox(ArmorDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sb_ar_quantity_val.sizePolicy().hasHeightForWidth())
        self.sb_ar_quantity_val.setSizePolicy(sizePolicy)
        self.sb_ar_quantity_val.setMinimum(1)
        self.sb_ar_quantity_val.setObjectName("sb_ar_quantity_val")
        self.gl_ar_quantity.addWidget(self.sb_ar_quantity_val, 1, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gl_ar_quantity.addItem(spacerItem, 0, 1, 1, 1)
        self.vl_ar_main.addLayout(self.gl_ar_quantity)
        self.buttonBox = QtWidgets.QDialogButtonBox(ArmorDialog)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.vl_ar_main.addWidget(self.buttonBox)

        self.retranslateUi(ArmorDialog)
        self.buttonBox.accepted.connect(ArmorDialog.accept)
        self.buttonBox.rejected.connect(ArmorDialog.reject)
        QtCore.QMetaObject.connectSlotsByName(ArmorDialog)

    def retranslateUi(self, ArmorDialog):
        _translate = QtCore.QCoreApplication.translate
        ArmorDialog.setWindowTitle(_translate("ArmorDialog", "Weapons - WOIN Character Assistant"))
        self.cb_ar_category.setItemText(0, _translate("ArmorDialog", "Archaic Armor"))
        self.cb_ar_category.setItemText(1, _translate("ArmorDialog", "Archaic Shields"))
        self.cb_ar_category.setItemText(2, _translate("ArmorDialog", "Eastern Armor"))
        self.cb_ar_category.setItemText(3, _translate("ArmorDialog", "Future Armor"))
        self.cb_ar_category.setItemText(4, _translate("ArmorDialog", "Future Shields"))
        self.tw_ar_gear.setSortingEnabled(True)
        self.tw_ar_gear.headerItem().setText(0, _translate("ArmorDialog", "Name"))
        self.tw_ar_gear.headerItem().setText(1, _translate("ArmorDialog", "Soak"))
        self.tw_ar_gear.headerItem().setText(2, _translate("ArmorDialog", "Defense"))
        self.tw_ar_gear.headerItem().setText(3, _translate("ArmorDialog", "Cost"))
        self.tw_ar_gear.headerItem().setText(4, _translate("ArmorDialog", "Type"))
        self.tw_ar_gear.headerItem().setText(5, _translate("ArmorDialog", "Weight"))
        self.tw_ar_gear.headerItem().setText(6, _translate("ArmorDialog", "Speed"))
        self.tw_ar_gear.headerItem().setText(7, _translate("ArmorDialog", "Special"))
        self.l_ar_min_skill.setText(_translate("ArmorDialog", "Min Skill"))
        self.l_ar_rarity.setText(_translate("ArmorDialog", "Rarity"))
        self.cb_ar_quality_val.setItemText(0, _translate("ArmorDialog", "Standard"))
        self.cb_ar_quality_val.setItemText(1, _translate("ArmorDialog", "High"))
        self.cb_ar_quality_val.setItemText(2, _translate("ArmorDialog", "Exceptional"))
        self.cb_ar_quality_val.setItemText(3, _translate("ArmorDialog", "Mastercraft"))
        self.cb_ar_quality_val.setItemText(4, _translate("ArmorDialog", "Artisanal"))
        self.cb_ar_quality_val.setItemText(5, _translate("ArmorDialog", "Legendary"))
        self.l_ar_cost.setText(_translate("ArmorDialog", "Cost"))
        self.l_ar_dice_pool.setText(_translate("ArmorDialog", "Dice Pool"))
        self.l_ar_quality.setText(_translate("ArmorDialog", "Quality"))
        self.l_ar_cost_val.setText(_translate("ArmorDialog", "cost_val"))
        self.l_ar_upgrades.setText(_translate("ArmorDialog", "Upgrades"))
        self.l_ar_rarity_val.setText(_translate("ArmorDialog", "rarity_val"))
        self.l_ar_dice_pool_val.setText(_translate("ArmorDialog", "dice_pool_val"))
        self.l_ar_min_skill_val.setText(_translate("ArmorDialog", "min_skill_val"))
        self.l_ar_upgrades_val.setText(_translate("ArmorDialog", "upgrades_val"))
        self.l_ar_soak.setText(_translate("ArmorDialog", "Soak"))
        self.l_ar_soak_val.setText(_translate("ArmorDialog", "soak_val"))
        self.l_ar_quantity.setText(_translate("ArmorDialog", "Quantity"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ArmorDialog = QtWidgets.QDialog()
    ui = Ui_ArmorDialog()
    ui.setupUi(ArmorDialog)
    ArmorDialog.show()
    sys.exit(app.exec_())

